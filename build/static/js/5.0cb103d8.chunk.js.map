{"version":3,"sources":["components/Titles/titleStyled.js","components/Titles/title.js","components/toplist/toplistStyled.js","components/toplist/toplist.js","Pages/Top/top.js"],"names":["TitleStyled","styled","div","themeStyle","theme","pramiaryTextColor","color","Title","props","context","useContext","MyContext","mainColor","text","TopListStyled","borderColor","sidebarBgColor","secondaryTextColor","Toplist","className","src","link","alt","loading","style","backgroundColor","date","title","paragraph","tags","map","tag","href","toLowerCase","Math","random","Top","TopsInfo","list","index","process","imageAlt"],"mappings":"+IAEaA,E,MAAcC,EAAOC,IAAV,gmBAIP,qBAAEC,WAAF,EAAeC,OAA6BC,qBAY7B,qBAAEC,S,OCLnBC,IATD,SAACC,GACX,IAAMC,EAAUC,qBAAWC,KAC3B,OACI,cAACX,EAAD,CAAaM,MAAOG,EAAQG,UAAWT,WAAYM,EAAQN,WAAYC,MAAOK,EAAQL,MAAtF,SACI,6BAAKI,EAAMK,W,+oECNVC,E,MAAgBb,EAAOC,IAAV,mlEAMF,qBAAEC,WAAF,EAAeC,OAA6BW,eAE5C,qBAAEZ,WAAF,EAAeC,OAA6BY,kBAQ7B,qBAAEb,WAAF,EAAeC,OAA6BW,eA8B1D,qBAAEZ,WAAF,EAAeC,OAA6BC,qBAO5C,qBAAEF,WAAF,EAAeC,OAA6Ba,sBASpD,qBAAEd,WAAF,EAAeC,OAA6BC,qB,cCvC9Ca,MArBf,SAAiBV,GACb,IAAMC,EAAUC,qBAAWC,KAC3B,OACI,eAACG,EAAD,CAAeX,WAAYM,EAAQN,WAAYC,MAAOK,EAAQL,MAA9D,UACI,sBAAKe,UAAU,OAAf,UACI,sBAAKA,UAAU,UAAf,UACI,qBAAKC,IAAKZ,EAAMa,KAAMC,IAAKd,EAAMc,IAAKC,QAAQ,SAC9C,sBAAMJ,UAAU,WAAWK,MAAO,CAACC,gBAAiBjB,EAAMF,OAA1D,SAAmEE,EAAMkB,UAE7E,sBAAKP,UAAU,WAAf,UACI,oBAAIA,UAAU,YAAd,SAA2BX,EAAMmB,QACjC,mBAAGR,UAAU,aAAb,SAA2BX,EAAMoB,kBAGzC,sBAAKT,UAAU,WAAf,mBACWX,EAAMqB,KAAKC,KAAI,SAAAC,GAAG,OAAI,mCAAgD,mBAAGP,MAAO,CAAClB,MAAOE,EAAMF,OAAQ0B,KAAI,WAAMD,EAAIE,eAA9C,SAAgEF,IAAhH,gBAAgBA,EAAhB,YAAuC,IAAhBG,KAAKC,qB,cCW1DC,UAvBf,WACI,IAAM3B,EAAUC,qBAAWC,KAC3B,OACI,sBAAKQ,UAAU,MAAf,UACI,cAAC,IAAD,CAAON,KAAK,eACZ,qBAAKM,UAAU,cAAf,SACKkB,EAASP,KAAI,SAACQ,EAAMC,GAAP,OACV,cAAC,EAAD,CAEIlB,KAAMmB,GAAyBF,EAAKjB,KACpCC,IAAKgB,EAAKG,SACVf,KAAMY,EAAKZ,KACXC,MAAOW,EAAKX,MACZC,UAAWU,EAAKV,UAChBC,KAAMS,EAAKT,KACXvB,MAAOG,EAAQG,WARnB,UACY0B,EAAKjB,KADjB,YACyBkB","file":"static/js/5.0cb103d8.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const TitleStyled = styled.div`\r\n    margin-bottom: 40px;\r\n    h2 {\r\n        font-size: 2.5rem;\r\n        color: ${({themeStyle , theme}) => themeStyle[theme].pramiaryTextColor};\r\n        text-transform: capitalize;\r\n        font-family: \"Rubik\", sans-serif;\r\n        font-weight: 700;\r\n        position: relative;\r\n        &::before,\r\n        &::after {\r\n            content: \"\";\r\n            height: 4px;\r\n            position: absolute;\r\n            top: 100%;\r\n            left: 0;\r\n            background-color: ${({color}) => color};\r\n        }\r\n        &::before {\r\n            width: 50px;\r\n        }\r\n        &::after {\r\n            width: 25px;\r\n            margin-top: 8px;\r\n    }\r\n`;","import React, { useContext } from 'react';\r\nimport { MyContext } from '../../Context/context';\r\nimport { TitleStyled } from './titleStyled';\r\n\r\nconst Title = (props) => {\r\n    const context = useContext(MyContext);\r\n    return (\r\n        <TitleStyled color={context.mainColor} themeStyle={context.themeStyle} theme={context.theme}>\r\n            <h2>{props.text}</h2>\r\n        </TitleStyled>\r\n    )\r\n}\r\n\r\nexport default Title;\r\n","import styled from 'styled-components';\r\n\r\nexport const TopListStyled = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    border-radius: 10px;\r\n    overflow: hidden;\r\n    border: 1px solid ${({themeStyle , theme}) => themeStyle[theme].borderColor};\r\n    width: 100%;\r\n    background-color: ${({themeStyle , theme}) => themeStyle[theme].sidebarBgColor};\r\n    -webkit-box-shadow: 0 0 20px rgb(48 46 77 / 15%);\r\n    box-shadow: 0 0 20px rgb(48 46 77 / 15%);\r\n    .info {\r\n        .top-img {\r\n            position: relative;\r\n            overflow: hidden;\r\n            height: 226px;\r\n            border-bottom: 1px solid ${({themeStyle , theme}) => themeStyle[theme].borderColor};\r\n            img {\r\n                width: 100%;\r\n                max-height: 225px;\r\n                object-fit: cover;\r\n                object-position: top;\r\n                display: block;\r\n                -webkit-transition: all 0.5s ease-in-out;\r\n                transition: all 0.5s ease-in-out;\r\n            }\r\n            .top-date {\r\n                position: absolute;\r\n                bottom: 15px;\r\n                left: 15px;\r\n                font-size: 0.9rem;\r\n                color: #fff;\r\n                border-radius: 5px;\r\n                padding: 4px 10px;\r\n                font-weight: 600;\r\n            }\r\n        }\r\n        &:hover .top-img img {\r\n            -webkit-transform: scale(1.1);\r\n            transform: scale(1.1);\r\n        }\r\n        .top_info {\r\n            padding: 30px 15px 0;\r\n            .top-title {\r\n                font-size: 1.1rem;\r\n                font-weight: 700;\r\n                color: ${({themeStyle , theme}) => themeStyle[theme].pramiaryTextColor};\r\n                text-transform: capitalize;\r\n                margin-bottom: 10px;\r\n            }\r\n            .top-descri {\r\n                font-weight: 400;\r\n                line-height: 25px;\r\n                color: ${({themeStyle , theme}) => themeStyle[theme].secondaryTextColor};\r\n                margin-bottom: 20px;\r\n            }\r\n        }\r\n    }\r\n    .top-tags {\r\n        padding: 30px 15px;\r\n        font-weight: 700;\r\n        line-height: 25px;\r\n        color: ${({themeStyle , theme}) => themeStyle[theme].pramiaryTextColor};\r\n        font-size: 14px;\r\n        text-transform: capitalize;\r\n        button {\r\n            background-color: transparent;\r\n            border: 0;\r\n            font-size: 1rem;\r\n            margin-left: 5px;\r\n            margin-bottom: 8px;\r\n        }\r\n    }\r\n`;","import React, { useContext } from 'react';\r\nimport { TopListStyled } from './toplistStyled';\r\nimport { MyContext } from '../../Context/context';\r\n\r\nfunction Toplist(props) {\r\n    const context = useContext(MyContext);\r\n    return (\r\n        <TopListStyled themeStyle={context.themeStyle} theme={context.theme}>\r\n            <div className='info'>\r\n                <div className='top-img'>\r\n                    <img src={props.link} alt={props.alt} loading='lazy' />\r\n                    <span className=\"top-date\" style={{backgroundColor: props.color}}>{props.date}</span>\r\n                </div>\r\n                <div className=\"top_info\">\r\n                    <h4 className=\"top-title\">{props.title}</h4>\r\n                    <p className=\"top-descri\">{props.paragraph}</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"top-tags\">\r\n                Tags: {props.tags.map(tag => <button key={`${tag}_${Math.random() * 10000}`}><a style={{color: props.color}} href={`#${tag.toLowerCase()}`}>{tag}</a>,</button> )}\r\n            </div>\r\n        </TopListStyled>\r\n    )\r\n}\r\n\r\nexport default Toplist;","import React, { useContext } from 'react';\r\nimport Title from '../../components/Titles/title';\r\nimport Toplist from '../../components/toplist/toplist';\r\nimport TopsInfo from './topInfo.json';\r\nimport './top.css';\r\nimport { MyContext } from '../../Context/context';\r\n\r\nfunction Top() {\r\n    const context = useContext(MyContext);\r\n    return (\r\n        <div className='top'>\r\n            <Title text='Latest Top' />\r\n            <div className='top_content'>\r\n                {TopsInfo.map((list, index) => (\r\n                    <Toplist\r\n                        key={`${list.link}_${index}`}\r\n                        link={process.env.PUBLIC_URL + list.link}\r\n                        alt={list.imageAlt}\r\n                        date={list.date}\r\n                        title={list.title}\r\n                        paragraph={list.paragraph}\r\n                        tags={list.tags}\r\n                        color={context.mainColor}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Top;\r\n"],"sourceRoot":""}