{"version":3,"sources":["layout/layoutStyled.js","layout/layout.js","components/Loader/Loader.js","sidebar/sidebarStyled.js","sidebar/sidebar.js","App/App.js","reportWebVitals.js","index.js","Context/context.js"],"names":["LayoutStyled","styled","div","themeStyle","theme","bodyColor","Layout","props","context","useContext","MyContext","className","sidebarOpen","children","Loader","style","borderColor","mainColor","SidebarStyled","sidebarBgColor","pramiaryTextColor","color","Sidebar","useState","chooseTheme","setChooseTheme","useEffect","checkboxThemeHandler","e","toggleTheme","to","onClick","toggleSidebar","exact","size","changeColor","type","name","id","value","onChange","checked","htmlFor","App","JSON","parse","localStorage","getItem","MainLazy","lazy","AboutLazy","Sevices","Tops","Contact","Portfolio","PageNotFound","routers","path","component","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","app","ReactDOM","render","StrictMode","document","getElementById","createContext","ProviderContext","setColor","openSidebar","setopenSidebar","isThemeDark","setIsThemeDark","setTheme","useMemo","setItem","stringify","Provider","isDarkTheme","changeColorFunc","bool","undefined","toggleThemeFunc","light","secondaryTextColor","dark"],"mappings":"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","file":"static/js/main.336ebeaa.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const LayoutStyled = styled.div`\r\n    position: fixed;\r\n    left: 270px;\r\n    background-color: ${({themeStyle , theme}) => themeStyle[theme].bodyColor};\r\n    min-height: 100vh;\r\n    padding: 0 30px;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    overflow-x: hidden;\r\n    overflow-y: auto;\r\n    transition: all .3s ease-in-out;\r\n    @media (max-width: 1199px) {\r\n        left: 0px;\r\n        &.open {\r\n            padding-left: 270px;\r\n        }\r\n    }\r\n    @media (max-width: 500px) {\r\n        &.open {\r\n            padding-left: 0;\r\n        }\r\n    }\r\n    & > div {\r\n        position: relative;\r\n        padding: 30px 30px 70px;\r\n        padding-top: 30px;\r\n        padding-bottom: 70px;\r\n        max-width: 1100px;\r\n        min-height: 100vh;\r\n        margin: auto;\r\n        @media (max-width: 1199px) {\r\n            padding-top: 60px;\r\n        }\r\n    }\r\n    & > .loader {\r\n        padding: 0;\r\n        max-width: 0;\r\n        min-height: 0;\r\n        margin: 0;\r\n    }\r\n`;","import React, { useContext } from 'react';\r\nimport { LayoutStyled } from './layoutStyled';\r\nimport { MyContext } from '../Context/context';\r\n\r\nexport default function Layout(props) {\r\n    const context = useContext(MyContext);\r\n    return (\r\n        <LayoutStyled themeStyle={context.themeStyle} theme={context.theme} className={context.sidebarOpen ? 'open' : ''}>\r\n            {props.children}\r\n        </LayoutStyled>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport './Loader.css';\r\nimport { MyContext } from '../../Context/context';\r\n\r\nconst Loader = () => {\r\n    const context = useContext(MyContext);\r\n    return (\r\n        <div className='loader'>\r\n            <div style={{borderColor: `${context.mainColor} transparent transparent transparent`}}></div>\r\n            <div style={{borderColor: `${context.mainColor} transparent transparent transparent`}}></div>\r\n            <div style={{borderColor: `${context.mainColor} transparent transparent transparent`}}></div>\r\n            <div style={{borderColor: `${context.mainColor} transparent transparent transparent`}}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader;","import styled from 'styled-components';\r\n\r\nexport const SidebarStyled = styled.div`\r\n    max-width: 270px;\r\n    background-color: ${({themeStyle , theme}) => themeStyle[theme].sidebarBgColor};\r\n    position: fixed;\r\n    height: 100%;\r\n    left: 0;\r\n    top: 0;\r\n    border: 1px solid ${({themeStyle , theme}) => themeStyle[theme].borderColor};\r\n    padding: 30px;\r\n    -webkit-transition: all 0.3s ease-in-out;\r\n    transition: all 0.3s ease-in-out;\r\n    z-index: 1;\r\n    @media (max-width: 1199px) {\r\n        left: -270px;\r\n        &.open {\r\n            left: 0px;\r\n        }\r\n    }\r\n    .logo a {\r\n        display: inline-block;\r\n        font-family: \"Rubik\", sans-serif;\r\n        font-size: 2.5rem;\r\n        font-weight: 900;\r\n        color: ${({themeStyle , theme}) => themeStyle[theme].pramiaryTextColor};\r\n        padding: 0 10px;\r\n        position: relative;\r\n        line-height: 50px;\r\n        text-transform: capitalize;\r\n        &::before,\r\n        &::after {\r\n            content: \"\";\r\n            position: absolute;\r\n            width: 20px;\r\n            height: 20px;\r\n        }\r\n        &::before {\r\n            top: 0;\r\n            left: 0;\r\n            border-top: 4px solid ${({color}) => color};\r\n            border-left: 4px solid  ${({color}) => color};\r\n        }\r\n        &::after {\r\n            bottom: 0;\r\n            right: 0;\r\n            border-bottom: 4px solid ${({color}) => color};\r\n            border-right: 4px solid ${({color}) => color};\r\n        }\r\n    }\r\n    .nav-toggle {\r\n        height: 40px;\r\n        width: 40px;\r\n        border-radius: 5px;\r\n        border: 1px solid #d4d4e3;\r\n        cursor: pointer;\r\n        position: fixed;\r\n        top: 20px;\r\n        left: 300px;\r\n        z-index: 11;\r\n        background-color: #fdf9ff;\r\n        align-items: center;\r\n        -ms-flex-pack: center;\r\n        justify-content: center;\r\n        display: none;\r\n        -webkit-transition: all 0.3s ease-in-out;\r\n        transition: all 0.3s ease-in-out;\r\n        &.open {\r\n            left: 222px;\r\n            span {\r\n                background-color: transparent;\r\n                -webkit-transition: all 0.5s ease-in-out;\r\n                transition: all 0.5s ease-in-out;\r\n                &::before {\r\n                    -webkit-transform: rotate(45deg);\r\n                    transform: rotate(45deg);\r\n                    top: 0;\r\n                    -webkit-transition: all 0.5s ease-in-out;\r\n                    transition: all 0.5s ease-in-out;\r\n                }\r\n                &::after {\r\n                    -webkit-transform: rotate(-45deg);\r\n                    transform: rotate(-45deg);\r\n                    top: 0;\r\n                    -webkit-transition: all 0.5s ease-in-out;\r\n                    transition: all 0.5s ease-in-out;\r\n                }\r\n            }\r\n            @media (max-width: 1199px) {\r\n                left: 222px;\r\n            }\r\n        }\r\n        @media (max-width: 1199px) {\r\n            display: flex;\r\n            display: -ms-flexbox;\r\n            left: 30px;\r\n        }\r\n        span {\r\n            height: 2px;\r\n            width: 18px;\r\n            display: inline-block;\r\n            position: relative;\r\n            background-color: ${({color}) => color};\r\n            &::before,\r\n            &::after {\r\n            content: \"\";\r\n            position: absolute;\r\n            left: 0;\r\n            height: 2px;\r\n            width: 18px;\r\n            background-color: ${({color}) => color};\r\n            }\r\n            &::before {\r\n                top: -6px;\r\n            }\r\n            &::after {\r\n                top: 6px;\r\n            }\r\n        }\r\n    }\r\n    .nav {\r\n        margin-top: 20px;\r\n        padding: 0;\r\n        list-style-type: none;\r\n        li {\r\n            &:not(:last-of-type) {\r\n                border-bottom: 1px solid ${({themeStyle , theme}) => themeStyle[theme].borderColor};\r\n            }\r\n            .navLinkLink {\r\n                display: flex;\r\n                align-items: center;\r\n                text-transform: capitalize;\r\n                line-height: 45px;\r\n                font-weight: 600;\r\n                color: ${({themeStyle , theme}) => themeStyle[theme].pramiaryTextColor};\r\n                -webkit-transition: all 0.3s ease-in-out;\r\n                transition: all 0.3s ease-in-out;\r\n                &.active {\r\n                    color: ${({color}) => color};\r\n                }\r\n                &:not(.active):hover {\r\n                    padding-left: 5px;\r\n                }\r\n                svg {\r\n                    margin-right: 10px;\r\n                }\r\n                &:hover {\r\n                    color: ${({color}) => color};\r\n                }\r\n            }\r\n        }\r\n    }\r\n    .section {\r\n        margin-top: 20px;\r\n        h5 {\r\n            font-size: 14px;\r\n            font-family: \"Rubik\", sans-serif;\r\n            font-weight: bold;\r\n            color: ${({themeStyle , theme}) => themeStyle[theme].pramiaryTextColor};\r\n            margin-bottom: 8px;\r\n            padding-bottom: 5px;\r\n            text-transform: capitalize;\r\n        }\r\n    }\r\n    .choose_color .choose_color_list {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        max-width: 85%;\r\n        margin: auto;\r\n        & > li {\r\n            border-radius: 50%;\r\n            cursor: pointer;\r\n            position: relative;\r\n            height: 25px;\r\n            width: 25px;\r\n            transition: all .3s ease-in-out;\r\n            &:hover {\r\n                transform: scale(1.1);\r\n            }\r\n            &::before {\r\n                content: \"\";\r\n                position: absolute;\r\n                border-radius: 50%;\r\n                width: 100%;\r\n                height: 100%;\r\n                filter: blur(5px);\r\n                z-index: -1;\r\n            }\r\n            &:first-of-type,\r\n            &:first-of-type::before {\r\n                background-color: #ec1839;       \r\n            }\r\n            &:nth-of-type(2),\r\n            &:nth-of-type(2)::before {\r\n                background-color: #2196f3;\r\n            }\r\n            &:nth-of-type(3),\r\n            &:nth-of-type(3)::before {\r\n                background-color: #fa5b0f;\r\n            }\r\n            &:nth-of-type(4),\r\n            &:nth-of-type(4)::before {\r\n                background-color: #ffb400;\r\n            }\r\n            &:last-of-type,\r\n            &:last-of-type::before {\r\n                background-color: #72b626;\r\n            }\r\n        }\r\n    }\r\n    .choose_theme form {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        max-width: 70%;\r\n        margin: auto;\r\n        .form_group {\r\n            display: flex;\r\n            align-items: center;\r\n            input {\r\n                margin-right: 5px;\r\n                user-select: none;\r\n            }\r\n            label {\r\n                text-transform: capitalize;\r\n                font-size: 15px;\r\n                font-family: \"Rubik\", sans-serif;\r\n                color: ${({themeStyle , theme}) => themeStyle[theme].pramiaryTextColor};\r\n                user-select: none;\r\n            }\r\n        }\r\n    }\r\n    .copyright {\r\n        margin-top: 40px;\r\n        font-size: 0.8rem;\r\n        color: #7d7d7d;\r\n    }\r\n`;","import React, {useState, useEffect, useContext } from 'react';\r\nimport { Link }  from 'react-router-dom';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { AiOutlineHome, AiOutlineUser, AiOutlineUnorderedList } from 'react-icons/ai';\r\nimport { BsBriefcaseFill } from 'react-icons/bs';\r\nimport { FaLevelUpAlt, FaComments } from 'react-icons/fa';\r\nimport { SidebarStyled } from './sidebarStyled';\r\nimport { MyContext } from '../Context/context';\r\n\r\nfunction Sidebar() {\r\n    const context = useContext(MyContext);\r\n\r\n    const [chooseTheme, setChooseTheme] = useState(context.theme);\r\n\r\n    useEffect(() => {\r\n        setChooseTheme(context.theme)\r\n    }, [context.theme])\r\n    \r\n    const checkboxThemeHandler = (e) => {\r\n        context.toggleTheme();\r\n    }\r\n\r\n    return (\r\n        <SidebarStyled color={context.mainColor} themeStyle={context.themeStyle} theme={context.theme} className={context.sidebarOpen ? 'open' : ''}>\r\n            <div className='logo'>\r\n                <Link to='/' onClick={() => context.toggleSidebar()}>MBajaber</Link>\r\n            </div>\r\n            <div className={`nav-toggle ${context.sidebarOpen ? 'open' : ''}`} onClick={() => context.toggleSidebar()} >\r\n                <span></span>\r\n            </div>\r\n            <ul className='nav'>\r\n                <li>\r\n                    <NavLink to='/' className='navLinkLink' exact onClick={() => context.toggleSidebar()}>\r\n                        <AiOutlineHome size={20} />\r\n                        <span>home</span>\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to='/about' className='navLinkLink' onClick={() => context.toggleSidebar()} >\r\n                        <AiOutlineUser size={20} />\r\n                        <span>About</span>\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to='/services' className='navLinkLink' onClick={() => context.toggleSidebar()} >\r\n                        <AiOutlineUnorderedList size={20} />\r\n                        <span>Services</span>\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to='/portfolio' className='navLinkLink' onClick={() => context.toggleSidebar()} >\r\n                        <BsBriefcaseFill size={20} />\r\n                        <span>Portfolio</span>\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to='/top' className='navLinkLink' onClick={() => context.toggleSidebar()} >\r\n                        <FaLevelUpAlt size={20} />\r\n                        <span>Top</span>\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to='contact' className='navLinkLink' onClick={() => context.toggleSidebar()} >\r\n                        <FaComments size={20} />\r\n                        <span>Content</span>\r\n                    </NavLink>\r\n                </li>\r\n            </ul>\r\n            <div className='choose_color section'>\r\n                <h5>Choose Color :</h5>\r\n                <ul className='choose_color_list'>\r\n                    <li onClick={() => context.changeColor('#ec1839')}></li> \r\n                    <li onClick={() => context.changeColor('#2196f3')}></li> \r\n                    <li onClick={() => context.changeColor('#fa5b0f')}></li>\r\n                    <li onClick={() => context.changeColor('#ffb400')}></li> \r\n                    <li onClick={() => context.changeColor('#72b626')}></li> \r\n                </ul>\r\n            </div>\r\n            <div className='choose_theme section'>\r\n                <h5>Choose Theme :</h5>\r\n                <form>\r\n                    <div className='form_group'>\r\n                        <input type='radio' name='theme' id='light_theme' value='light' onChange={checkboxThemeHandler} checked={chooseTheme === 'light'} />\r\n                        <label htmlFor='light_theme'>light</label>\r\n                    </div>\r\n                    <div className='form_group'>\r\n                        <input type='radio' name='theme' id='dark_theme' value='dark' onChange={checkboxThemeHandler} checked={chooseTheme === 'dark'} />\r\n                        <label htmlFor='dark_theme'>dark</label>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div className='copyright'>\r\n                &copy; 2021 Mohammed Bajaber\r\n            </div>\r\n        </SidebarStyled>\r\n    );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React, { lazy, Suspense, useContext, useState, useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Layout from '../layout/layout';\nimport Loader from '../components/Loader/Loader';\nimport Sudebar from '../sidebar/sidebar';\nimport { MyContext } from '../Context/context';\n\nfunction App() {\n  const context = useContext(MyContext);\n  const mainColor = useState(JSON.parse(localStorage.getItem('main_color')) || context.mainColor)[0];\n  const MainLazy = lazy(() => import('../Pages/Home/home'));\n  const AboutLazy = lazy(() => import('../Pages/About/about'));\n  const Sevices = lazy(() => import('../Pages/Services/Services'));\n  const Tops = lazy(() => import('../Pages/Top/top'));\n  const Contact = lazy(() => import('../Pages/Contact/contact'));\n  const Portfolio = lazy(() => import('../Pages/Portfolio/portfolio'));\n  const PageNotFound = lazy(() => import('../Pages/404Page/404Page'));\n\n  useEffect(() => {\n    context.changeColor(mainColor);\n  }, []);\n\n  const routers = (\n    <Switch>\n      <Route path='/' component={MainLazy} exact />\n      <Route path='/about' component={AboutLazy} />\n      <Route path='/services' component={Sevices} />\n      <Route path='/top' component={Tops} />\n      <Route path='/contact' component={Contact} />\n      <Route path='/portfolio' component={Portfolio} />\n      <Route component={PageNotFound} />\n    </Switch>\n  );\n\n  return (\n    <div className=\"App\">\n      <Sudebar />\n        <Layout>\n          <Suspense fallback={<Loader />}>\n            {routers}\n          </Suspense>\n          </Layout>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter  } from 'react-router-dom';\nimport ProviderContext from './Context/context';\n\nconst app = (\n  <BrowserRouter>\n    <ProviderContext>\n      <App />\n    </ProviderContext>\n  </BrowserRouter>\n)\n\nReactDOM.render(\n  <React.StrictMode>\n      {app}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();","import React, {useState ,createContext, useMemo } from 'react';\r\n\r\nexport const MyContext = createContext();\r\n\r\nexport default function ProviderContext({ children }) {\r\n\r\n    const [color, setColor] = useState('#ec1839');\r\n    const [openSidebar, setopenSidebar] = useState(false);\r\n    const [isThemeDark, setIsThemeDark] = useState(JSON.parse(localStorage.getItem('theme')) || false);\r\n    const [theme, setTheme] = useState('light');\r\n\r\n    const changeColorFunc = (value) => {\r\n        setColor(value);\r\n        localStorage.setItem('main_color', JSON.stringify(value));\r\n    }\r\n\r\n    const toggleSidebarFunc = () => setopenSidebar(bool => !bool);\r\n\r\n    useMemo(() => {\r\n        localStorage.setItem('theme', JSON.stringify(isThemeDark));\r\n        const getValue = isThemeDark ? 'dark' : 'light';\r\n        setTheme(getValue);\r\n    }, [isThemeDark]);\r\n\r\n    const toggleThemeFunc = (value) => {\r\n        if(value === undefined) {\r\n            setIsThemeDark(theme => !theme);\r\n        } else {\r\n            setIsThemeDark(value);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <MyContext.Provider value={{\r\n            mainColor: color,\r\n            sidebarOpen: openSidebar,\r\n            isDarkTheme: isThemeDark,\r\n            theme: theme,\r\n            changeColor: (value) => changeColorFunc(value),\r\n            toggleSidebar: () => toggleSidebarFunc(),\r\n            toggleTheme: (value) => toggleThemeFunc(value),\r\n            themeStyle: {\r\n                light: {\r\n                    sidebarBgColor: '#fdf9ff',\r\n                    bodyColor: '#f2f2fc',\r\n                    borderColor: '#e8dfec',\r\n                    pramiaryTextColor: '#302e4d',\r\n                    secondaryTextColor: '#504e70',\r\n                },\r\n                dark: {\r\n                    sidebarBgColor: '#222',\r\n                    bodyColor: '#151515',\r\n                    borderColor: '#393939',\r\n                    pramiaryTextColor: '#fff',\r\n                    secondaryTextColor: '#e9e9e9',\r\n                }\r\n            }\r\n        }}>\r\n            {children}\r\n        </MyContext.Provider>\r\n    )\r\n}"],"sourceRoot":""}